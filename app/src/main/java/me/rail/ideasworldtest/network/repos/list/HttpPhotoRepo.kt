package me.rail.ideasworldtest.network.repos.listimport me.rail.ideasworldtest.models.list.Photoimport me.rail.ideasworldtest.network.ApiResultimport me.rail.ideasworldtest.network.HttpClientimport javax.inject.Injectclass HttpPhotoRepo @Inject constructor(    private val client: HttpClient): PhotoRepo {    override suspend fun getPhotos(): ApiResult<MutableList<Photo>> {        val photosResponse = client.getPhotos(page = (0..1000).random())        val photos = mutableListOf<Photo>()        if (photosResponse.isSuccessful) {            photosResponse.body()?.let { photos.addAll(it) }            client.getPhotos(page = (0..1000).random(), per_page = 20).body()                ?.let { photos.addAll(it) }            return ApiResult.Success(photos)        }        val errorMsg = photosResponse.errorBody()?.string()        photosResponse.errorBody()?.close()        return ApiResult.Error(errorMsg)    }}